apiVersion: apps/v1
kind: Deployment
metadata:
  name: holidays-api-backend
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: holidays-api
      type: backend
  template:
    metadata:
      labels:
        app: holidays-api
        type: backend
    spec:
      volumes:
        - name: cache-volume
          emptyDir: {}
      containers:
        - name: backend
          image: 611630892743.dkr.ecr.ap-northeast-1.amazonaws.com/holidays-api-backend:main-94 # {"$imagepolicy": "flux-system:holidays-api-backend-prod"}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /home/dockeruser/project/tmp
              name: cache-volume
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: RAILS_ENV
              value: production
            - name: PUMA_PORT
              value: "3000"
            - name: RAILS_MAX_THREADS
              value: "5"
            - name: RAILS_MIN_THREADS
              value: "3"
            - name: WEB_CONCURRENCY
              value: "2"
            - name: RAILS_LOG_TO_STDOUT
              value: "true"
            - name: HOLIDAYS_API_BUCKET
              value: revenue-staging-uploads
            - name: API_URL
              value: http://backend:3000
            - name: AWS_REGION
              value: ap-northeast-1
            # - name: REDIS_URL
            #   value: redis:6379
            - name: RAILS_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: RAILS_MASTER_KEY
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: DB_HOST
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: DB_PASSWORD
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: GOOGLE_CALENDAR_API_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: GOOGLE_CALENDAR_API_KEY
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: JWT_SECRET_KEY
          # livenessProbe:
          #   exec:
          #     command:
          #     - podcli
          #     - check
          #     - http
          #     - localhost:3000/healthz
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 5
          # readinessProbe:
          #   exec:
          #     command:
          #     - podcli
          #     - check
          #     - http
          #     - localhost:3000/readyz
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 5
          resources:
            limits:
              memory: 384Mi
            requests:
              cpu: 10m
              memory: 384Mi
